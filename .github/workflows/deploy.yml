name: Deploy Application

on:
  push:
    branches: [ main, deploy ]
  pull_request:
    branches: [ main, deploy ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      # Build and push Docker image to GHCR
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
      
      # Setup minikube with a more reliable configuration
      - name: Setup Minikube
        id: minikube
        uses: medyagh/setup-minikube@latest
        with:
          minikube-version: 1.28.0
          kubernetes-version: v1.23.0
          driver: docker
          start-args: --memory=2048mb --cpus=2
          github-token: ${{ secrets.GHCR_PAT }}
      
      # Configure kubectl
      - name: Configure kubectl
        run: |
          minikube update-context
          kubectl get nodes
          
      # Pull the image into minikube
      - name: Pull image into minikube
        run: |
          # Tell minikube to pull the image
          minikube image pull ghcr.io/${{ github.repository }}:latest
          
          - name: Deploy to Kubernetes
          run: |
            # Create namespace
            kubectl create namespace smu --dry-run=client -o yaml | kubectl apply -f -
            
            # Update deployment to use imagePullPolicy: IfNotPresent
            sed -i 's/imagePullPolicy: Always/imagePullPolicy: IfNotPresent/g' k8s/deployment.yaml
            
            # Apply manifests
            kubectl apply -f k8s/deployment.yaml -n smu
            kubectl apply -f k8s/service.yaml -n smu
            
            # Show deployment right after applying
            echo "Initial deployment status:"
            kubectl get deployments -n smu
            
            # Wait with increased timeout
            kubectl rollout status deployment/smu-app -n smu --timeout=300s
        
      # Optional - Setup port forwarding for testing
      - name: Setup port forwarding
        run: |
          # Get NodePort and IP
          export NODE_PORT=$(kubectl get -n smu -o jsonpath="{.spec.ports[0].nodePort}" services smu-app)
          export MINIKUBE_IP=$(minikube ip)
          echo "Application is available at http://$MINIKUBE_IP:$NODE_PORT"